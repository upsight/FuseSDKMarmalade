/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "FuseSDK_autodefs.h"
#include "s3eEdk.h"
#include "FuseSDK.h"
//Declarations of Init and Term functions
extern s3eResult FuseSDKInit();
extern void FuseSDKTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void FuseSDKStartSession_wrap(const char* appID, cfuhash_table_t* options)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKStartSession"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKStartSession, 2, appID, options);
}

static void FuseSDKPauseSession_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKPauseSession"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKPauseSession, 0);
}

static void FuseSDKResumeSession_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKResumeSession"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKResumeSession, 0);
}

static void FuseSDKTerminateSession_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKTerminateSession"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKTerminateSession, 0);
}

static void FuseSDKRegisterForPushNotifications_wrap(const char* projectID)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKRegisterForPushNotifications"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKRegisterForPushNotifications, 1, projectID);
}

static void FuseSDKPreloadAdForZoneID_wrap(const char* zoneID)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKPreloadAdForZoneID"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKPreloadAdForZoneID, 1, zoneID);
}

static bool FuseSDKIsAdAvailableForZoneID_wrap(const char* zoneID)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKIsAdAvailableForZoneID"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKIsAdAvailableForZoneID, 1, zoneID);
}

static void FuseSDKShowAdForZoneID_wrap(const char* zoneID, cfuhash_table_t* options)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKShowAdForZoneID"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKShowAdForZoneID, 2, zoneID, options);
}

static void FuseSDKRegisterInAppPurchaseAndroid_wrap(FusePurchaseStateAndroid purchaseState, const char* purchaseToken, const char* productId, const char* orderId, long purchaseTime, const char* developerPayload, const double* price, const char* currency)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKRegisterInAppPurchaseAndroid"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKRegisterInAppPurchaseAndroid, 8, purchaseState, purchaseToken, productId, orderId, purchaseTime, developerPayload, price, currency);
}

static void FuseSDKRegisterInAppPurchaseiOS_wrap(FusePurchaseStateiOS purchaseState, const char* receiptData, int recieptDataLength, double* price, const char* currency, const char* productID, const char* transactionID)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKRegisterInAppPurchaseiOS"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKRegisterInAppPurchaseiOS, 7, purchaseState, receiptData, recieptDataLength, price, currency, productID, transactionID);
}

static void FuseSDKDisplayNotifications_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKDisplayNotifications"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKDisplayNotifications, 0);
}

static void FuseSDKDisplayMoreGames_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKDisplayMoreGames"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKDisplayMoreGames, 0);
}

static void FuseSDKRegisterGender_wrap(int gender)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKRegisterGender"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKRegisterGender, 1, gender);
}

static void FuseSDKFacebookLogin_wrap(const char* facebookId, const char* name, const char* accessToken)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKFacebookLogin"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKFacebookLogin, 3, facebookId, name, accessToken);
}

static void FuseSDKTwitterLogin_wrap(const char* twitterId)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKTwitterLogin"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKTwitterLogin, 1, twitterId);
}

static void FuseSDKDeviceLogin_wrap(const char* alias)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKDeviceLogin"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKDeviceLogin, 1, alias);
}

static void FuseSDKFuseLogin_wrap(const char* fuseId, const char* alias)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKFuseLogin"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKFuseLogin, 2, fuseId, alias);
}

static void FuseSDKGameCenterLogin_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGameCenterLogin"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGameCenterLogin, 0);
}

static void FuseSDKGooglePlayLogin_wrap(const char* alias, const char* token)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGooglePlayLogin"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGooglePlayLogin, 2, alias, token);
}

static const char* FuseSDKGetOriginalAccountId_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGetOriginalAccountId"));
    return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGetOriginalAccountId, 0);
}

static const char* FuseSDKGetOriginalAccountAlias_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGetOriginalAccountAlias"));
    return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGetOriginalAccountAlias, 0);
}

static int FuseSDKGetOriginalAccountType_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGetOriginalAccountType"));
    return (int)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGetOriginalAccountType, 0);
}

static const char* FuseSDKGetFuseID_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGetFuseID"));
    return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGetFuseID, 0);
}

static int FuseSDKgamesPlayed_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKgamesPlayed"));
    return (int)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKgamesPlayed, 0);
}

static const char* FuseSDKLibraryVersion_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKLibraryVersion"));
    return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKLibraryVersion, 0);
}

static bool FuseSDKConnected_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKConnected"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKConnected, 0);
}

static void FuseSDKTimeFromServer_wrap()
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKTimeFromServer"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKTimeFromServer, 0);
}

static void FuseSDKEnableData_wrap(bool enable)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKEnableData"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKEnableData, 1, enable);
}

static const char* FuseSDKGetGameConfigurationValue_wrap(const char* key)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKGetGameConfigurationValue"));
    return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKGetGameConfigurationValue, 1, key);
}

static void FuseSDKRegisterLevel_wrap(int level)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKRegisterLevel"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKRegisterLevel, 1, level);
}

static void FuseSDKRegisterCurrency_wrap(int type, int balance)
{
    IwTrace(FUSESDK_VERBOSE, ("calling FuseSDK func on main thread: FuseSDKRegisterCurrency"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)FuseSDKRegisterCurrency, 2, type, balance);
}

#define FuseSDKStartSession FuseSDKStartSession_wrap
#define FuseSDKPauseSession FuseSDKPauseSession_wrap
#define FuseSDKResumeSession FuseSDKResumeSession_wrap
#define FuseSDKTerminateSession FuseSDKTerminateSession_wrap
#define FuseSDKRegisterForPushNotifications FuseSDKRegisterForPushNotifications_wrap
#define FuseSDKPreloadAdForZoneID FuseSDKPreloadAdForZoneID_wrap
#define FuseSDKIsAdAvailableForZoneID FuseSDKIsAdAvailableForZoneID_wrap
#define FuseSDKShowAdForZoneID FuseSDKShowAdForZoneID_wrap
#define FuseSDKRegisterInAppPurchaseAndroid FuseSDKRegisterInAppPurchaseAndroid_wrap
#define FuseSDKRegisterInAppPurchaseiOS FuseSDKRegisterInAppPurchaseiOS_wrap
#define FuseSDKDisplayNotifications FuseSDKDisplayNotifications_wrap
#define FuseSDKDisplayMoreGames FuseSDKDisplayMoreGames_wrap
#define FuseSDKRegisterGender FuseSDKRegisterGender_wrap
#define FuseSDKFacebookLogin FuseSDKFacebookLogin_wrap
#define FuseSDKTwitterLogin FuseSDKTwitterLogin_wrap
#define FuseSDKDeviceLogin FuseSDKDeviceLogin_wrap
#define FuseSDKFuseLogin FuseSDKFuseLogin_wrap
#define FuseSDKGameCenterLogin FuseSDKGameCenterLogin_wrap
#define FuseSDKGooglePlayLogin FuseSDKGooglePlayLogin_wrap
#define FuseSDKGetOriginalAccountId FuseSDKGetOriginalAccountId_wrap
#define FuseSDKGetOriginalAccountAlias FuseSDKGetOriginalAccountAlias_wrap
#define FuseSDKGetOriginalAccountType FuseSDKGetOriginalAccountType_wrap
#define FuseSDKGetFuseID FuseSDKGetFuseID_wrap
#define FuseSDKgamesPlayed FuseSDKgamesPlayed_wrap
#define FuseSDKLibraryVersion FuseSDKLibraryVersion_wrap
#define FuseSDKConnected FuseSDKConnected_wrap
#define FuseSDKTimeFromServer FuseSDKTimeFromServer_wrap
#define FuseSDKEnableData FuseSDKEnableData_wrap
#define FuseSDKGetGameConfigurationValue FuseSDKGetGameConfigurationValue_wrap
#define FuseSDKRegisterLevel FuseSDKRegisterLevel_wrap
#define FuseSDKRegisterCurrency FuseSDKRegisterCurrency_wrap

#endif

s3eResult FuseSDKRegister(FuseSDKCallback cbid, s3eCallback fn, void* pData)
{
    return s3eEdkCallbacksRegister(S3E_EXT_FUSESDK_HASH, FUSESDK_CALLBACK_MAX, cbid, fn, pData, 0);
};

s3eResult FuseSDKUnRegister(FuseSDKCallback cbid, s3eCallback fn)
{
    return s3eEdkCallbacksUnRegister(S3E_EXT_FUSESDK_HASH, FUSESDK_CALLBACK_MAX, cbid, fn);
}

void FuseSDKRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[33];
    funcPtrs[0] = (void*)FuseSDKRegister;
    funcPtrs[1] = (void*)FuseSDKUnRegister;
    funcPtrs[2] = (void*)FuseSDKStartSession;
    funcPtrs[3] = (void*)FuseSDKPauseSession;
    funcPtrs[4] = (void*)FuseSDKResumeSession;
    funcPtrs[5] = (void*)FuseSDKTerminateSession;
    funcPtrs[6] = (void*)FuseSDKRegisterForPushNotifications;
    funcPtrs[7] = (void*)FuseSDKPreloadAdForZoneID;
    funcPtrs[8] = (void*)FuseSDKIsAdAvailableForZoneID;
    funcPtrs[9] = (void*)FuseSDKShowAdForZoneID;
    funcPtrs[10] = (void*)FuseSDKRegisterInAppPurchaseAndroid;
    funcPtrs[11] = (void*)FuseSDKRegisterInAppPurchaseiOS;
    funcPtrs[12] = (void*)FuseSDKDisplayNotifications;
    funcPtrs[13] = (void*)FuseSDKDisplayMoreGames;
    funcPtrs[14] = (void*)FuseSDKRegisterGender;
    funcPtrs[15] = (void*)FuseSDKFacebookLogin;
    funcPtrs[16] = (void*)FuseSDKTwitterLogin;
    funcPtrs[17] = (void*)FuseSDKDeviceLogin;
    funcPtrs[18] = (void*)FuseSDKFuseLogin;
    funcPtrs[19] = (void*)FuseSDKGameCenterLogin;
    funcPtrs[20] = (void*)FuseSDKGooglePlayLogin;
    funcPtrs[21] = (void*)FuseSDKGetOriginalAccountId;
    funcPtrs[22] = (void*)FuseSDKGetOriginalAccountAlias;
    funcPtrs[23] = (void*)FuseSDKGetOriginalAccountType;
    funcPtrs[24] = (void*)FuseSDKGetFuseID;
    funcPtrs[25] = (void*)FuseSDKgamesPlayed;
    funcPtrs[26] = (void*)FuseSDKLibraryVersion;
    funcPtrs[27] = (void*)FuseSDKConnected;
    funcPtrs[28] = (void*)FuseSDKTimeFromServer;
    funcPtrs[29] = (void*)FuseSDKEnableData;
    funcPtrs[30] = (void*)FuseSDKGetGameConfigurationValue;
    funcPtrs[31] = (void*)FuseSDKRegisterLevel;
    funcPtrs[32] = (void*)FuseSDKRegisterCurrency;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[33] = { 0 };

    /*
     * Register the extension
     */
s3eEdkRegister("FuseSDK", funcPtrs, sizeof(funcPtrs), flags, FuseSDKInit, FuseSDKTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int FuseSDKStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&FuseSDKRegisterExt;
    return 0;
}

int g_FuseSDKVal = FuseSDKStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    FuseSDKRegisterExt();
}
#endif

#endif
